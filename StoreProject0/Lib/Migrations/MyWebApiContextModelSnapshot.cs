// <auto-generated />
using Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Lib.Migrations
{
    [DbContext(typeof(MyWebApiContext))]
    partial class MyWebApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Lib.Customer", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Lib.Location", b =>
                {
                    b.Property<string>("loc")
                        .HasColumnType("text");

                    b.Property<string>("Customerid")
                        .HasColumnType("text");

                    b.HasKey("loc");

                    b.HasIndex("Customerid");

                    b.ToTable("location");
                });

            modelBuilder.Entity("Lib.Order", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("Customerid")
                        .HasColumnType("text");

                    b.Property<string>("Locationloc")
                        .HasColumnType("text");

                    b.HasKey("name");

                    b.HasIndex("Customerid");

                    b.HasIndex("Locationloc");

                    b.ToTable("order");
                });

            modelBuilder.Entity("Lib.Product", b =>
                {
                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Locationloc")
                        .HasColumnType("text");

                    b.Property<string>("Locationloc1")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ordername")
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.HasKey("Location");

                    b.HasIndex("Locationloc");

                    b.HasIndex("Locationloc1");

                    b.HasIndex("Ordername");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Lib.Location", b =>
                {
                    b.HasOne("Lib.Customer", null)
                        .WithMany("inv")
                        .HasForeignKey("Customerid");
                });

            modelBuilder.Entity("Lib.Order", b =>
                {
                    b.HasOne("Lib.Customer", null)
                        .WithMany("Orderlist")
                        .HasForeignKey("Customerid");

                    b.HasOne("Lib.Location", null)
                        .WithMany("OrderHistory")
                        .HasForeignKey("Locationloc");
                });

            modelBuilder.Entity("Lib.Product", b =>
                {
                    b.HasOne("Lib.Location", null)
                        .WithMany("Productlist")
                        .HasForeignKey("Locationloc");

                    b.HasOne("Lib.Location", null)
                        .WithMany("ShoppingCart")
                        .HasForeignKey("Locationloc1");

                    b.HasOne("Lib.Order", null)
                        .WithMany("Orderdetails")
                        .HasForeignKey("Ordername");
                });
#pragma warning restore 612, 618
        }
    }
}
